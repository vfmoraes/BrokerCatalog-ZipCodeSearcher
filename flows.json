[
    {
        "id": "e7abe56ee9f508c2",
        "type": "tab",
        "label": "BrokerCatalog",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fa530b25641010ca",
        "type": "tab",
        "label": "ZipCodeSearch",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1",
        "type": "inject",
        "z": "e7abe56ee9f508c2",
        "name": "Trigger Request",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "x": 320,
        "y": 380,
        "wires": [
            [
                "2"
            ]
        ]
    },
    {
        "id": "2",
        "type": "http request",
        "z": "e7abe56ee9f508c2",
        "name": "Fetch Brokers",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://brasilapi.com.br/api/cvm/corretoras/v1",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 520,
        "y": 380,
        "wires": [
            [
                "3"
            ]
        ]
    },
    {
        "id": "3",
        "type": "function",
        "z": "e7abe56ee9f508c2",
        "name": "Format Brokers",
        "func": "let brokers = msg.payload; // Resposta da API\nlet formattedBrokers = brokers.map(broker => {\n    return `${broker.nome_social} - ${broker.municipio} / ${broker.cnpj}`;\n});\nmsg.payload = formattedBrokers.join('<br>'); // Juntar os itens com quebra de linha em HTML\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 380,
        "wires": [
            [
                "4"
            ]
        ]
    },
    {
        "id": "4",
        "type": "template",
        "z": "e7abe56ee9f508c2",
        "name": "Display Brokers",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<div><p>{{{payload}}}</p></div>",
        "x": 920,
        "y": 380,
        "wires": [
            [
                "5"
            ]
        ]
    },
    {
        "id": "5",
        "type": "http response",
        "z": "e7abe56ee9f508c2",
        "name": "Send Response",
        "statusCode": "",
        "headers": {},
        "x": 1120,
        "y": 380,
        "wires": []
    },
    {
        "id": "da8fa0f293e17118",
        "type": "http in",
        "z": "e7abe56ee9f508c2",
        "name": "",
        "url": "/brokers",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 330,
        "y": 460,
        "wires": [
            [
                "2"
            ]
        ]
    },
    {
        "id": "45791d1d0d165cd5",
        "type": "http in",
        "z": "fa530b25641010ca",
        "name": "CEP Route",
        "url": "/zipcode/:cep",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "8cafdb659e2891e2"
            ]
        ]
    },
    {
        "id": "8cafdb659e2891e2",
        "type": "http request",
        "z": "fa530b25641010ca",
        "name": "Fetch CEP Details",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://brasilapi.com.br/api/cep/v2/{{req.params.cep}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 390,
        "y": 180,
        "wires": [
            [
                "eedc8d9984e7b30d"
            ]
        ]
    },
    {
        "id": "eedc8d9984e7b30d",
        "type": "function",
        "z": "fa530b25641010ca",
        "name": "Format CEP Data",
        "func": "if (!msg.payload || msg.statusCode !== 200) {\n    msg.payload = `\n        <script>\n            alert('CEP not found. Please check and try again.');\n        </script>\n        <h2>CEP not found. Please check and try again.</h2>`;\n} else {\n    let details = msg.payload;\n    msg.payload = `\n        <h2>üó∫Ô∏è Details for CEP: ${details.cep}</h2>\n        <p><strong>Street:</strong> ${details.street || 'N/A'}</p>\n        <p><strong>Neighborhood:</strong> ${details.neighborhood || 'N/A'}</p>\n        <p><strong>City:</strong> ${details.city}</p>\n        <p><strong>State:</strong> ${details.state}</p>`;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 180,
        "wires": [
            [
                "6a9f61dabc083ead"
            ]
        ]
    },
    {
        "id": "6a9f61dabc083ead",
        "type": "template",
        "z": "fa530b25641010ca",
        "name": "CEP Response Template",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>CEP Details</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css\">\n</head>\n<body>\n    <div class=\"container mt-5\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-6\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        {{{payload}}}\n                    </div>\n                </div>\n                <div class=\"mt-4\">\n                    <h3>Search for another CEP:</h3>\n                    <form method=\"get\" action=\"/zipcode\" class=\"d-flex\">\n                        <input type=\"text\" name=\"cep\" placeholder=\"Enter CEP\" class=\"form-control me-2\" required />\n                        <button type=\"submit\" class=\"btn btn-outline-primary\"><i class=\"bi bi-search\">Search</i></button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" crossorigin=\"anonymous\"></script>\n</body>\n</html>",
        "x": 830,
        "y": 180,
        "wires": [
            [
                "c6d1480c8865c5a0"
            ]
        ]
    },
    {
        "id": "c6d1480c8865c5a0",
        "type": "http response",
        "z": "fa530b25641010ca",
        "name": "Send CEP Response",
        "statusCode": "",
        "headers": {},
        "x": 1060,
        "y": 180,
        "wires": []
    },
    {
        "id": "4fe4982b30842600",
        "type": "http in",
        "z": "fa530b25641010ca",
        "name": "CEP Form Route",
        "url": "/zipcode",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "cbbf2624697f7eb9"
            ]
        ]
    },
    {
        "id": "cbbf2624697f7eb9",
        "type": "change",
        "z": "fa530b25641010ca",
        "name": "Set CEP from Form",
        "rules": [
            {
                "t": "set",
                "p": "req.params.cep",
                "pt": "msg",
                "to": "req.query.cep",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 300,
        "wires": [
            [
                "8cafdb659e2891e2"
            ]
        ]
    }
]